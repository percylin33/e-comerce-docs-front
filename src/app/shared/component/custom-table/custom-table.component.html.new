<div class="table-container">
  <!-- Vista de tabla para desktop -->
  <div class="table-view">
    <table mat-table matSort [dataSource]="dataSource" class="desktop-table">

      <ng-container *ngFor="let column of structTable" [matColumnDef]="column.column">
        <!-- Encabezados mejorados -->
        <th mat-header-cell *matHeaderCellDef mat-sort-header>
          {{ column.column === 'id' ? (padre === 'users-management' ? 'Acciones' : 'Seleccionar') : column.title }}
        </th>
        <td mat-cell *matCellDef="let row; let i = index">
          <ng-container *ngIf="column.column === 'id'; else defaultCell">
            <mat-checkbox
              [disabled]="isAdminUser(row)"
              class="custom-checkbox"
              [checked]="isRowSelected(row.id)"
              (change)="onCheckboxChange(row.id, $event.checked)">
            </mat-checkbox>
          </ng-container>
          <ng-template #defaultCell>
            <!-- Formatear la fecha en 'paymentDate' -->
            <ng-container *ngIf="column.column === 'paymentDate'">
              <span class="date-cell">{{ row[column.column] | date:'dd/MM/yyyy' }}</span>
            </ng-container>
            <!-- Mostrar el rol con badges -->
            <ng-container *ngIf="column.column === 'roles'">
              <div class="roles-container">
                <span *ngFor="let role of getFilteredRoles(row.roles); let i = index" 
                      class="role-badge" 
                      [ngClass]="getRoleClass(role.name)">
                  {{ getRoleDisplayName(role.name) }}
                </span>
              </div>
            </ng-container>
            <!-- Formatear el monto con estilo -->
            <ng-container *ngIf="column.column === 'amount'">
              <span class="amount-cell">{{ row[column.column] | currency:'PEN':'symbol':'1.2-2' }}</span>
            </ng-container>
            <!-- Status badges -->
            <ng-container *ngIf="column.column === 'status'">
              <span class="status-badge" [ngClass]="getStatusClass(row[column.column])">
                {{ row[column.column] }}
              </span>
            </ng-container>
            <!-- Para otras columnas -->
            <ng-container *ngIf="column.column !== 'paymentDate' && column.column !== 'roles' && column.column !== 'amount' && column.column !== 'status'">
              <span class="text-cell">{{ row[column.column] }}</span>
            </ng-container>
          </ng-template>
        </td>
      </ng-container>

      <ng-container matColumnDef="actions">
        <th mat-header-cell *matHeaderCellDef>{{ padre === 'users-management' ? 'Acciones' : 'Editar' }}</th>
        <td mat-cell *matCellDef="let row">
          <button class="action-button" (click)="onEditClick(row.id)" 
                  [title]="'Editar ' + (row.name || 'elemento')">
            <i class="nb-edit"></i>
          </button>
        </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
      <tr mat-row *matRowDef="let row; columns: displayedColumns;" 
          [class.selected]="isRowSelected(row.id)"></tr>
    </table>
  </div>

  <!-- Vista de cards para móviles mejorada -->
  <div class="cards-view">
    <!-- Estado vacío -->
    <div *ngIf="!dataSource?.data?.length" class="empty-state">
      <i class="empty-icon nb-search"></i>
      <div class="empty-text">No se encontraron resultados</div>
      <div class="empty-subtext">Intenta ajustar los filtros de búsqueda</div>
    </div>

    <!-- Cards de datos -->
    <nb-card *ngFor="let row of dataSource.data; trackBy: trackByFn" 
             class="mobile-card" 
             [class.selected]="isRowSelected(row.id)">
      <nb-card-header>
        <div class="card-header-content">
          <div class="title-section">
            <h6>{{ getMainTitle(row) }}</h6>
            <p>{{ getSubtitle(row) }}</p>
          </div>
          <div class="actions-section">
            <mat-checkbox *ngIf="padre !== 'users-management' && !isAdminUser(row)"
              class="custom-checkbox"
              [checked]="isRowSelected(row.id)"
              (change)="onCheckboxChange(row.id, $event.checked)">
            </mat-checkbox>
            <button class="action-button" (click)="onEditClick(row.id)"
                    [title]="'Editar ' + (row.name || 'elemento')">
              <i class="nb-edit"></i>
            </button>
          </div>
        </div>
      </nb-card-header>

      <nb-card-body>
        <div class="card-details">
          <!-- Mostrar el resto de campos -->
          <ng-container *ngFor="let column of structTable">
            <div class="detail-item" *ngIf="shouldShowField(column.column) && row[column.column]">
              <strong>{{ column.title }}</strong>
              
              <!-- Fecha formateada -->
              <span *ngIf="column.column === 'paymentDate'">
                {{ row[column.column] | date:'dd/MM/yyyy' }}
              </span>
              
              <!-- Roles con badges -->
              <div *ngIf="column.column === 'roles'" class="roles-mobile">
                <span *ngFor="let role of getFilteredRoles(row.roles)" 
                      class="role-badge mobile" 
                      [ngClass]="getRoleClass(role.name)">
                  {{ getRoleDisplayName(role.name) }}
                </span>
              </div>
              
              <!-- Monto formateado -->
              <span *ngIf="column.column === 'amount'" class="amount-mobile">
                {{ row[column.column] | currency:'PEN':'symbol':'1.2-2' }}
              </span>
              
              <!-- Status badge -->
              <span *ngIf="column.column === 'status'" 
                    class="status-badge mobile" 
                    [ngClass]="getStatusClass(row[column.column])">
                {{ row[column.column] }}
              </span>
              
              <!-- Otros campos -->
              <span *ngIf="!isSpecialField(column.column)">
                {{ row[column.column] }}
              </span>
            </div>
          </ng-container>
        </div>
      </nb-card-body>
    </nb-card>
  </div>
</div>
